{"version":3,"sources":["app.js","layouts/header-index.js","layouts/main.js","layouts/nav.ctrl.js","layouts/sidebar.ctrl.js","services/api-interceptor.js","services/api.js","services/cart.js","services/categories.js","services/images.js","services/orders.js","services/storage.js","components/category/category.ctrl.js","components/cart/cart.ctrl.js","components/order/order.ctrl.js","layouts/core/common.js","layouts/core/config.js","layouts/core/pagination.js","layouts/core/routes.js","layouts/core/spinner.js","blocks/filter/postfix.js","blocks/helper/func.js","components/home/home.ctrl.js","blocks/directive/image-slider/slider.js","blocks/directive/add-cart/add-cart.js"],"names":["angular","module","config","localStorageServiceProvider","$anchorScrollProvider","ngDialogProvider","$httpProvider","setPrefix","setStorageType","setNotify","setDefaults","showClose","interceptors","push","disableAutoScrolling","defaults","useXDomain","headers","common","post","run","$rootScope","ENV","fullPath","path","apiUrl","HeaderIndexCtrl","$interval","$scope","toggleSlide","nextIndex","vm","index","max","startInterval","interval","this","selectSlide","cancel","$on","controller","$inject","MainCtrl","ngDialog","storage","showCallback","open","template","width","appendClassName","callbackModalCtrl","controllerAs","orders","sendForm","create","form","success","client","name","phone","address","dishes","status","send","categories","getArray","NavCtrl","SideBarCtrl","cart","calculateOrderPrice","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dish","value","price","count","err","list","priceOrder","incCount","inc","decCount","dec","removeDish","remove","clearCart","clean","$watch","SideBarOrderCtrl","$state","forEach","quantity","dishId","id","$promise","go","factory","$q","request","url","indexOf","requestError","reject","responseError","response","api","baseUrl","$get","$http","get","data","delete","put","helpers","APP_EVENTS","increaseCount","product","search","searchByKey","products","decreaseCount","splice","length","pop","getAmountOfProducts","getListOfProducts","addCart","saveInStorage","f","apply","arguments","setObject","emit","$broadcast","editCart","add","service","amount","$resource","fetchAll","method","isArray","params","action","fetchDishes","images","localStorageService","set","key","defaultValue","JSON","stringify","getObject","parse","CategoryCtrl","spinner","pagination","$stateParams","activate","promises","getDishes","start","then","getMoreDishes","chunkDishes","shapeArrayInRows","row","showDishDetail","CartCtrl","$controller","calculateOrderInfo","extend","orderInfo","OrderSuccessCtrl","step","nextStep","$timeout","$emit","constant","serverError","createPagination","entry","limit","cnf","page","total","calculateTotalPage","entries","nextPage","hasEnabled","hasPaginationEnabled","chunkEntries","slice","Math","ceil","$stateProvider","$urlRouterProvider","state","views","@","templateUrl","resolve","appInit","header@index","nav@index","sidebar@index","content@index","marketing@index","footer@index","abstract","header@main","nav@main","sidebar@main","marketing@main","footer@main","content@main","otherwise","startLoading","promise","loadingSpinner","all","restrict","replace","directive","PostfixFilter","postfix","trim","filter","array","sizeColumn","i","keys","Object","HomeCtrl","imageSlider","scope","click","link","clickImage","onClick","isCurrentIndex","prevSlide","nextSlide","element","bind","$apply","closeAll"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\n  angular.module('app', [\n      /**\n       * Angular modules\n       */\n\n      'ngAnimate',\n      'ngResource',\n\n      /**\n       * 3rd Party modules\n       */\n\n      'ngDialog',\n      'LocalStorageModule',\n      'ui.router',\n      'ui.mask',\n      'templates',\n\n      /**\n       * Reusable blocks\n       */\n\n      'app.blocks',\n\n      /**\n       * Project modules\n       */\n\n      'app.core',\n      'app.layouts',\n      'app.ctrls',\n      'app.services',\n      'app.filters',\n    ])\n    .config((\n      localStorageServiceProvider,\n      $anchorScrollProvider,\n      ngDialogProvider,\n      $httpProvider\n    ) => {\n      localStorageServiceProvider\n        .setPrefix('YOKI')\n        .setStorageType('localStorage')\n        .setNotify(true, true);\n\n      ngDialogProvider.setDefaults({showClose: false});\n      $httpProvider.interceptors.push('apiInterceptor');\n      $anchorScrollProvider.disableAutoScrolling();\n\n      $httpProvider.defaults.useXDomain                         = true;\n      $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n      $httpProvider.defaults.headers.post['Content-Type']       = 'application/json';\n      $httpProvider.defaults.headers.post['Accept']             = 'application/json';\n    })\n    .run(($rootScope, ENV) => {\n      $rootScope.fullPath = (path) => {\n        return ENV.apiUrl + path;\n      }\n    })\n\n  angular.module('app.core', []);\n  angular.module('app.blocks', []);\n  angular.module('app.layouts', []);\n  angular.module('app.ctrls', []);\n  angular.module('app.services', []);\n  angular.module('app.filters', []);\n})();\n","(function() {\n  angular.module('app.layouts')\n    .controller('HeaderIndexCtrl', HeaderIndexCtrl)\n\n  HeaderIndexCtrl.$inject = [\n    '$interval',\n    '$scope',\n  ];\n\n  function HeaderIndexCtrl(\n    $interval,\n    $scope\n  ) {\n    let vm = this;\n\n    vm.index = 0;\n    let interval;\n    let max  = 2;\n\n    vm.selectSlide = (index) => {\n      if (interval) {\n        $interval.cancel(interval);\n      }\n\n      vm.index = index;\n      startInterval();\n    }\n\n    function toggleSlide() {\n      let nextIndex = vm.index + 1;\n\n      if (nextIndex > max) {\n        vm.index = 0;\n      } else {\n        vm.index++;\n      }\n    }\n\n    function startInterval() {\n      interval = $interval(toggleSlide, 5000);\n    }\n\n    startInterval();\n\n    $scope.$on('$destroy', () => {\n      if (interval) {\n        $interval.cancel(interval);\n      }\n    });\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('MainCtrl', MainCtrl)\n\n  /**\n   * @ngdoc function\n   * @description Контроллер на уровне всего приложения\n   */\n\n  MainCtrl.$inject = [\n    '$rootScope',\n    'ngDialog',\n    'storage'\n  ];\n\n  function MainCtrl(\n    $rootScope,\n    ngDialog,\n    storage\n  ) {\n\n    $rootScope.categories   = storage.getArray('categories');\n    $rootScope.showCallback = showCallback;\n\n    //////////////\n\n    function showCallback() {\n      ngDialog.open({\n        template: 'html/modals/callback.html',\n        showClose: true,\n        width: \"25%\",\n        appendClassName: 'callback-modal',\n        controller: callbackModalCtrl,\n        controllerAs: 'vm'\n      });\n    }\n\n    callbackModalCtrl.$inject = [\n      'orders'\n    ];\n\n    function callbackModalCtrl(\n      orders\n    ) {\n      let vm = this;\n\n      vm.form = {\n        client: {\n          name: '',\n          phone: 0,\n          address: 'default'\n        },\n        dishes: [],\n        status: 'FRESH'\n      };\n\n      vm.success = false;\n      vm.send    = sendForm;\n\n      //////////////////\n\n      function sendForm() {\n        orders.create(vm.form, () => {\n          vm.success = true;\n        });\n      }\n    }\n  }\n})();\n","(function() {\n  angular.module('app.layouts')\n    .controller('NavCtrl', NavCtrl)\n\n  NavCtrl.$inject = [];\n\n  function NavCtrl() {\n    let vm = this;\n  }\n})();\n","(function() {\n  angular.module('app.layouts')\n    .controller('SideBarCtrl', SideBarCtrl)\n    .controller('SideBarOrderCtrl', SideBarOrderCtrl)\n\n  SideBarCtrl.$inject = [\n    '$scope',\n    'cart'\n  ];\n\n  function SideBarCtrl(\n    $scope,\n    cart\n  ) {\n    let vm = this;\n\n    vm.dishes     = cart.list();\n    vm.priceOrder = calculateOrderPrice();\n\n    vm.incCount = (dish) => {\n      cart.inc(dish);\n    }\n\n    vm.decCount = (dish) => {\n      cart.dec(dish);\n    }\n\n    vm.removeDish = (dish) => {\n      cart.remove(dish);\n    }\n\n    vm.clearCart = () => {\n      cart.clean();\n    }\n\n    $scope.$watch(function() {\n      return vm.dishes;\n    }, function() {\n      vm.priceOrder = calculateOrderPrice();\n    }, true);\n\n    // Вычисляет цену заказа\n    function calculateOrderPrice() {\n      let result = 0;\n\n      if (vm.dishes) {\n        for (let dish of vm.dishes) {\n          result += dish.price * dish.count;\n        }\n      }\n\n      return result;\n    }\n  }\n\n  SideBarOrderCtrl.$inject = [\n    'orders',\n    '$state',\n    'cart'\n  ];\n\n  function SideBarOrderCtrl(\n    orders,\n    $state,\n    cart\n  ) {\n    let vm = this;\n\n    let dishes = [];\n\n    cart.list().forEach((dish) => {\n      dishes.push({\n        quantity: dish.count,\n        dishId: dish.id\n      });\n    });\n\n    vm.form = {\n      client: {\n        name: '',\n        phone: 0,\n        address: ''\n      },\n      dishes: dishes,\n      status: 'FRESH'\n    };\n\n    vm.send = () => {\n      orders.create(vm.form).$promise.finally(() => {\n        cart.clean();\n        \n        $state.go('main.order-success', {\n          client: vm.form.client\n        });\n      });\n    }\n  }\n})();\n","(function() {\n    angular.module('app.services')\n        .factory('apiInterceptor', ($rootScope, $q, ENV) => {\n            return {\n                request: (config) => {\n                    // Если запрос идет не к html/, то добавляем base url\n                    if (config.url.indexOf('html/', 0) == -1) {\n                        config.url = ENV.apiUrl + config.url\n                    }\n\n                    return config;\n                },\n                requestError: (request) => {\n                    return $q.reject(request);\n                },\n                responseError: (response) => {\n                    return $q.reject(response);\n                }\n            };\n        })\n})();","(function() {\n    angular.module('app.services')\n        .factory('$api', api)\n\n    /**\n     * @ngdoc service\n     * @name $api\n     * @module app.services\n     *\n     * @description\n     * Простая обертка под сервисом $http\n     */\n\n    function api() {\n        this.baseUrl = '';\n        this.$get = ['$http', ($http) => {\n            return {\n                get(url) {\n                    return $http.get(this.baseUrl + url)\n                },\n                post(url, data) {\n                    return $http.post(this.baseUrl + url, data)\n                },\n                delete(url) {\n                    return $http.delete(this.baseUrl + url)\n                },\n                put(url, data) {\n                    return $http.put(this.baseUrl + url, data)\n                }\n            }\n        }];\n    }\n})();","(function() {\n  angular.module('app.services')\n    .factory('cart', cart)\n\n  cart.$inject = [\n    'storage',\n    'helpers',\n    'APP_EVENTS',\n    'common'\n  ];\n\n  function cart(\n    storage,\n    helpers,\n    APP_EVENTS,\n    common\n  ) {\n\n    let products = storage.getArray('cart');\n\n    let add    = saveInStorage(emit(addCart));\n    let inc    = saveInStorage(emit(increaseCount));\n    let dec    = saveInStorage(emit(decreaseCount));\n    let remove = saveInStorage(emit(removeDish));\n    let clean  = saveInStorage(emit(clearCart));\n\n    let service = {\n      add: add,\n      inc: inc,\n      dec: dec,\n      remove: remove,\n      clean: clean,\n      amount: getAmountOfProducts,\n      list: getListOfProducts,\n    };\n\n    return service;\n\n    /**\n     * Увеличивает кол-во у переданного продукта\n     * @param {Object} product\n     */\n\n    function increaseCount(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      search.count++;\n    }\n\n    /**\n     * Уменьшает кол-во у переданного продукта\n     * @param {Object} product\n     */\n\n    function decreaseCount(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      search.count--;\n\n      if (!search.count) {\n        products.splice(products.indexOf(search), 1)\n      }\n    }\n\n    /**\n     * Удаляет продукт из корзины\n     * @param {Object} product\n     */\n\n    function removeDish(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      products.splice(products.indexOf(search), 1);\n    }\n\n    /**\n     * Чистит корзину\n     */\n\n    function clearCart() {\n      while (products.length) {\n        products.pop();\n      }\n    }\n\n    /**\n     * Возвращает общее кол-во товаров в корзине\n     * @returns {number}\n     */\n\n    function getAmountOfProducts() {\n      let result = 0;\n\n      if (products) {\n        products.forEach((product) => {\n          result += product.count;\n        });\n      }\n\n      return result;\n    }\n\n    function getListOfProducts() {\n      return products;\n    }\n\n    /**\n     * Добавление товара в корзину\n     * @param {Object} product\n     */\n\n    function addCart(product) {\n      // Пытаемся найти переданный товар в корзине\n      let search = helpers.searchByKey(products, {id: product.id});\n\n      // Если в корзине он уже есть, то увеличиваем кол-во\n      if (search) {\n        search.count++;\n      } else {\n        product.count = 1;\n        products.push(product);\n      }\n    }\n\n    function saveInStorage(f) {\n      return function() {\n        f.apply(this, arguments);\n        storage.setObject('cart', products);\n      }\n    }\n\n    function emit(f) {\n      return function() {\n        f.apply(this, arguments);\n        common.$broadcast(APP_EVENTS.editCart);\n      }\n    }\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('categories', categories)\n\n  categories.$inject = [\n    '$resource'\n  ];\n\n  function categories($resource) {\n    return $resource('/category/:action/:id', {}, {\n      'fetchAll': {\n        method: 'GET',\n        isArray: true,\n        params: {\n          action: 'getAll'\n        }\n      },\n      'fetchDishes': {\n        method: 'GET',\n        isArray: true,\n        params: {\n          action: 'getAvailableDishesFromCategory'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('images', images)\n\n  images.$inject = [\n    '$resource'\n  ];\n\n  function images($resource) {\n    return $resource('/images/:action/:data', {}, {\n      'fetchAll': {\n        method: 'POST',\n        isArray: true,\n        params: {\n          action: 'getDishImages'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('orders', orders)\n\n  orders.$inject = [\n    '$resource'\n  ];\n\n  function orders($resource) {\n    return $resource('/operator/:action/:request', {}, {\n      'create': {\n        method: 'POST',\n        params: {\n          action: 'createOrder'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n    angular.module('app.services')\n        .factory('storage', storage)\n\n    /**\n     * @ngdoc service\n     * @name storage\n     * @module app.services\n     *\n     * @description\n     * Более удобная обертка над внешним сервисом localStorageService\n     */\n\n    storage.$inject = [\n        'localStorageService'\n    ];\n\n    function storage(localStorageService) {\n        return {\n            set: function(key, value) {\n                localStorageService.set(key, value);\n            },\n            get: function(key, defaultValue) {\n                return localStorageService.get(key) || defaultValue;\n            },\n            remove: function(key) {\n                localStorageService.remove(key);\n            },\n            setObject: function(key, value) {\n                localStorageService.set(key, JSON.stringify(value));\n            },\n            getObject: function(key) {\n                return JSON.parse(localStorageService.get(key)) || {};\n            },\n            getArray: function(key) {\n                return JSON.parse(localStorageService.get(key)) || [];\n            }\n        }\n    }\n})();","(function() {\n  angular.module('app.ctrls')\n    .controller('CategoryCtrl', CategoryCtrl)\n\n  CategoryCtrl.$inject = [\n    'spinner',\n    'pagination',\n    'categories',\n    'ngDialog',\n    'helpers',\n    '$stateParams'\n  ];\n\n  function CategoryCtrl(\n    spinner,\n    pagination,\n    categories,\n    ngDialog,\n    helpers,\n    $stateParams\n  ) {\n    let vm = this;\n\n    vm.pagination;\n    vm.dishes = [];\n\n    activate();\n\n    function activate() {\n      let promises = [getDishes()];\n      spinner.start(promises);\n    }\n\n    function getDishes() {\n      return categories.fetchDishes({\n        id: $stateParams.id\n      }).$promise.then((dishes) => {\n        vm.pagination = pagination.create(dishes);\n        vm.getMoreDishes();\n      });\n    }\n\n    vm.getMoreDishes = () => {\n      let chunkDishes = vm.pagination.next();\n\n      helpers.shapeArrayInRows(chunkDishes, 3).forEach((row) => {\n        vm.dishes.push(row);\n      });\n    }\n\n    vm.showDishDetail = (dish) => {\n      ngDialog.open({template: 'html/modals/dish.html', data: dish});\n    }\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('CartCtrl', CartCtrl)\n\n  CartCtrl.$inject = [\n    '$controller',\n    '$scope',\n  ];\n\n  function CartCtrl(\n    $controller,\n    $scope\n  ) {\n    let vm = this;\n\n    // Добавляем в текущий vm все что есть в SideBarCtrl.vm\n    angular.extend(vm, $controller('SideBarCtrl', {$scope: $scope}));\n    vm.orderInfo = calculateOrderInfo();\n\n    $scope.$watch(function() {\n      return vm.dishes;\n    }, function() {\n      vm.orderInfo = calculateOrderInfo();\n    }, true);\n\n    function calculateOrderInfo() {\n      let result = {\n        price: 0,\n        count: 0\n      };\n\n      if (vm.dishes) {\n        for (let dish of vm.dishes) {\n          result.price += dish.price * dish.count;\n          result.count += dish.count;\n        }\n      }\n\n      return result;\n    }\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('OrderSuccessCtrl', OrderSuccessCtrl)\n\n  OrderSuccessCtrl.$inject = [\n    '$stateParams'\n  ];\n\n  function OrderSuccessCtrl(\n    $stateParams\n  ) {\n    let vm = this;\n\n    vm.step   = 1;\n    vm.client = $stateParams.client;\n\n    vm.nextStep = () => {\n      vm.step++;\n    }\n  }\n})();","(function() {\n    angular.module('app.core')\n        .factory('common', common)\n\n    common.$inject = [\n        '$q',\n        '$rootScope',\n        '$timeout',\n    ];\n\n    function common(\n        $q,\n        $rootScope,\n        $timeout\n    ) {\n        let service = {\n            $broadcast: $broadcast,\n            $emit: $emit,\n            $q: $q,\n            $timeout: $timeout\n        };\n\n        return service;\n\n        function $broadcast() {\n            return $rootScope.$broadcast.apply($rootScope, arguments);\n        }\n\n        function $emit() {\n            return $rootScope.$emit.apply($rootScope, arguments);\n        }\n    }\n})();","(function() {\n  angular.module('app.core')\n    .constant('ENV', {\n      \"apiUrl\": 'http://46.101.230.74:8080'\n    })\n    .constant('APP_EVENTS', {\n      editCart: 'edit-to-cart',\n      serverError: 'server-error',\n    })\n})();","(function() {\n    angular.module('app.core')\n        .factory('pagination', pagination)\n\n    pagination.$inject = [];\n\n    function pagination() {\n        let cnf     = {};\n        let entries = [];\n        let service = {\n            create: createPagination\n        };\n\n        return service;\n\n        function createPagination(entry, limit = 6) {\n            cnf.page  = 0;\n            cnf.total = calculateTotalPage(entry, limit);\n            cnf.limit = limit;\n\n            entries = entry;\n\n            // Pagination public method\n            return {\n                next: nextPage,\n                hasEnabled: hasPaginationEnabled\n            }\n        }\n\n        function nextPage() {\n            let chunkEntries = [];\n\n            if (cnf.page === 0) {\n                chunkEntries = entries.slice(cnf.page, cnf.limit);\n            } else {\n                chunkEntries = entries.slice(cnf.page * cnf.limit, (cnf.page * cnf.limit) + cnf.limit);\n            }\n\n            cnf.page++;\n\n            return chunkEntries;\n        }\n\n        function hasPaginationEnabled() {\n            return cnf.page < cnf.total\n        }\n\n        function calculateTotalPage(entries, limit) {\n            return Math.ceil(entries.length / limit);\n        }\n    }\n})();","(function() {\n  angular.module('app.core')\n    .config(($stateProvider, $urlRouterProvider) => {\n      $stateProvider\n        .state('index', {\n          url: '/',\n          views: {\n            '@': {\n              templateUrl: 'html/layouts/main.html',\n              resolve: {\n                appInit: function(categories, storage) {\n                  // Подгружаем категории\n                  return categories.fetchAll().$promise.then((categories) => {\n                    storage.setObject('categories', categories);\n                  });\n                }\n              }\n            },\n            'header@index': {\n              templateUrl: 'html/layouts/header-index.tpl.html',\n            },\n            'nav@index': {\n              templateUrl: 'html/layouts/nav.tpl.html',\n              controller: 'NavCtrl',\n              controllerAs: 'nav'\n            },\n            'sidebar@index': {\n              templateUrl: 'html/layouts/sidebar.tpl.html',\n              controller: 'SideBarCtrl',\n              controllerAs: 'sbar',\n            },\n            'content@index': {\n              templateUrl: 'html/components/home/home.tpl.html',\n              controller: 'HomeCtrl',\n              controllerAs: 'home'\n            },\n            'marketing@index': {\n              templateUrl: 'html/layouts/marketing.tpl.html',\n            },\n            'footer@index': {\n              templateUrl: 'html/layouts/footer.tpl.html',\n            },\n          },\n        })\n        .state('main', {\n          abstract: true,\n          url: '/',\n          views: {\n            '@': {\n              templateUrl: 'html/layouts/main.html',\n              resolve: {\n                appInit: function(categories, storage) {\n                  // Если нет категорий подгружаем\n                  if (!storage.getArray('categories').length) {\n                    return categories.fetchAll().$promise.then((categories) => {\n                      storage.setObject('categories', categories);\n                    });\n                  }\n                }\n              }\n            },\n            'header@main': {\n              templateUrl: 'html/layouts/header.tpl.html',\n            },\n            'nav@main': {\n              templateUrl: 'html/layouts/nav.tpl.html',\n              controller: 'NavCtrl',\n              controllerAs: 'nav'\n            },\n            'sidebar@main': {\n              templateUrl: 'html/layouts/sidebar.tpl.html',\n              controller: 'SideBarCtrl',\n              controllerAs: 'sbar',\n            },\n            'marketing@main': {\n              templateUrl: 'html/layouts/marketing.tpl.html',\n            },\n            'footer@main': {\n              templateUrl: 'html/layouts/footer.tpl.html',\n            },\n          },\n        })\n        .state('main.category', {\n          url: 'category/:id',\n          views: {\n            'content@main': {\n              controller: 'CategoryCtrl',\n              templateUrl: 'html/components/category/category.tpl.html',\n              controllerAs: 'cat'\n            }\n          }\n        })\n        .state('main.cart', {\n          url: 'cart',\n          views: {\n            'content@main': {\n              controller: 'CartCtrl',\n              templateUrl: 'html/components/cart/cart.tpl.html',\n              controllerAs: 'cart'\n            },\n            'sidebar@main': {\n              templateUrl: 'html/layouts/sidebar-order.tpl.html',\n              controller: 'SideBarOrderCtrl',\n              controllerAs: 'sbcar',\n            },\n          }\n        })\n        .state('main.order-success', {\n          url: 'order/success',\n          views: {\n            'content@main': {\n              controller: 'OrderSuccessCtrl',\n              templateUrl: 'html/components/order/order.tpl.html',\n              controllerAs: 'order'\n            }\n          },\n          params: {\n            client: null\n          }\n        })\n\n      $urlRouterProvider.otherwise('/');\n    })\n})();\n","(function() {\n  angular.module('app.core')\n    .directive('loadingSpinner', loadingSpinner)\n    .factory('spinner', spinner)\n\n  spinner.$inject = [\n    'common',\n    '$rootScope'\n  ];\n\n  function spinner(common, $rootScope) {\n    let service = {\n      start: startLoading\n    };\n\n    return service;\n\n    /**\n     * Запускает spinner во время выполнения промисов\n     * @param {Array} promise\n     */\n\n    function startLoading(promise) {\n      $rootScope.loadingSpinner = true;\n\n      common.$q.all(promise).then(() => {\n        common.$timeout(() => {\n          $rootScope.loadingSpinner = false;\n        }, 400);\n      });\n    }\n  }\n\n  function loadingSpinner() {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: 'html/layouts/core/spinner.html'\n    }\n  }\n})();","(function() {\n    angular.module('app.blocks')\n        .filter('postfix', PostfixFilter)\n\n    function PostfixFilter() {\n        return (value, postfix) => {\n            if (typeof postfix === 'string') {\n                return `${value} ${postfix}`.trim();\n            }\n        }\n    }\n})();\n","(function() {\n    angular.module('app.blocks')\n        .factory('helpers', helpers)\n\n    helpers.$inject = [];\n\n    function helpers() {\n\n        var service = {}\n\n        /**\n         * Возвращает новый массив разделенные на ряды, в каждом ряду будет sizeColumn колонок\n         * Helpers.shapeArrayInRows([0,1,2,3], 3) => [[0,1,2],[3]]\n         * @param {Array} array\n         * @param {Integer} sizeColumn\n         * @returns {Array}\n         */\n\n        service.shapeArrayInRows = (array, sizeColumn) => {\n            var result = [];\n\n            for (var i = 0; i < array.length; i += sizeColumn) {\n                result.push(array.slice(i, i + sizeColumn));\n            }\n\n            return result;\n        }\n\n        /**\n         * Выполняет поиск в массиве data, по переданному объекту search.\n         * Пример объекта search = {key: value}\n         * @param {Array} data\n         * @param {Object} search\n         * @returns {Object|Undefined}\n         */\n\n        service.searchByKey = (data, search) => {\n            let keys = Object.keys(search);\n\n            for (let row of data) {\n                if (row[keys[0]] == search[keys[0]]) {\n                    return row;\n                }\n            }\n        }\n\n        return service;\n    }\n})();","(function() {\n  angular.module('app.ctrls')\n    .controller('HomeCtrl', HomeCtrl)\n\n  HomeCtrl.$inject = [\n    'spinner',\n    'pagination',\n    'categories',\n    'ngDialog',\n    'helpers'\n  ];\n\n  function HomeCtrl(\n    spinner,\n    pagination,\n    categories,\n    ngDialog,\n    helpers\n  ) {\n    let vm = this;\n    vm.pagination;\n    vm.dishes = [];\n\n    activate();\n\n    function activate() {\n      let promises = [getDishes()];\n      spinner.start(promises);\n    }\n\n    function getDishes() {\n      return categories.fetchDishes({\n        id: 1\n      }).$promise.then(dishes => {\n        vm.pagination = pagination.create(dishes);\n        vm.getMoreDishes();\n      });\n    }\n\n    vm.getMoreDishes = () => {\n      let chunkDishes = vm.pagination.next();\n\n      helpers.shapeArrayInRows(chunkDishes, 3).forEach((row) => {\n        vm.dishes.push(row);\n      });\n    }\n\n    vm.showDishDetail = (dish) => {\n      ngDialog.open({template: 'html/modals/dish.html', data: dish});\n    }\n  }\n})();\n","(function() {\n  angular.module('app.blocks')\n    .directive('imageSlider', imageSlider)\n\n  imageSlider.$inject = ['ENV'];\n\n  function imageSlider(ENV) {\n    return {\n      restrict: 'E',\n      replace: true,\n      scope: {\n        images: '=images',\n        click: '&'\n      },\n      templateUrl: 'html/blocks/directive/image-slider/slider.html',\n      link: (scope) => {\n        scope.index = 0;\n\n        scope.clickImage = () => {\n          if (scope.onClick) {\n            scope.onClick()\n          }\n        }\n\n        scope.fullPath = (path) => {\n          return ENV.apiUrl + path;\n        }\n\n        scope.isCurrentIndex = (index) => {\n          return scope.index === index;\n        }\n\n        scope.prevSlide = () => {\n          let max  = scope.images.length - 1;\n          let next = scope.index - 1;\n\n          scope.index = (next === -1) ? max : next;\n        }\n\n        scope.nextSlide = () => {\n          let max  = scope.images.length - 1;\n          let next = scope.index + 1;\n\n          scope.index = (next > max) ? 0 : next;\n        }\n      }\n    }\n  }\n})();","(function() {\n  angular.module('app.blocks')\n    .directive('addCart', addCart)\n\n  addCart.$inject = [\n    'cart',\n    'ngDialog'\n  ];\n\n  function addCart(cart, ngDialog) {\n    return {\n      restrict: 'A',\n      scope: {\n        dish: '=dish'\n      },\n      link: (scope, element) => {\n        element.bind('click', () => {\n          scope.$apply(() => {\n            ngDialog.closeAll();\n            cart.add(scope.dish);\n          });\n        });\n      }\n    }\n  }\n})();"],"sourceRoot":"/source/"}