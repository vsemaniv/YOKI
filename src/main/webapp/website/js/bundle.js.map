{"version":3,"sources":["app.js","layouts/main.js","layouts/nav.ctrl.js","layouts/sidebar.ctrl.js","services/api-interceptor.js","services/api.js","services/cart.js","services/categories.js","services/images.js","services/orders.js","services/storage.js","blocks/filter/postfix.js","blocks/helper/func.js","components/cart/cart.ctrl.js","components/category/category.ctrl.js","components/home/home.ctrl.js","components/order/order.ctrl.js","layouts/core/common.js","layouts/core/config.js","layouts/core/pagination.js","layouts/core/routes.js","layouts/core/spinner.js","blocks/directive/add-cart/add-cart.js","blocks/directive/image-slider/slider.js"],"names":["angular","module","config","localStorageServiceProvider","$anchorScrollProvider","ngDialogProvider","$httpProvider","setPrefix","setStorageType","setNotify","setDefaults","showClose","interceptors","push","disableAutoScrolling","defaults","useXDomain","headers","common","post","MainCtrl","$rootScope","ngDialog","storage","showCallback","open","template","width","appendClassName","controller","callbackModalCtrl","controllerAs","orders","sendForm","create","vm","form","success","this","client","name","phone","address","dishes","status","send","categories","getArray","$inject","NavCtrl","SideBarCtrl","$scope","cart","calculateOrderPrice","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dish","value","price","count","err","list","priceOrder","incCount","inc","decCount","dec","removeDish","remove","clearCart","clean","$watch","SideBarOrderCtrl","$state","forEach","quantity","dishId","id","$promise","go","factory","$q","ENV","request","url","indexOf","apiUrl","requestError","reject","responseError","response","api","baseUrl","$get","$http","get","data","delete","put","helpers","APP_EVENTS","increaseCount","product","search","searchByKey","products","decreaseCount","splice","length","pop","getAmountOfProducts","getListOfProducts","addCart","saveInStorage","f","apply","arguments","setObject","emit","$broadcast","editCart","add","service","amount","$resource","fetchAll","method","isArray","params","action","fetchDishes","images","localStorageService","set","key","defaultValue","JSON","stringify","getObject","parse","PostfixFilter","postfix","trim","filter","shapeArrayInRows","array","sizeColumn","i","slice","keys","Object","row","CartCtrl","$controller","calculateOrderInfo","extend","orderInfo","CategoryCtrl","spinner","pagination","$stateParams","activate","promises","getDishes","start","then","getDishesImages","getMoreDishes","before","obj","links","image","link","imagesLink","chunkDishes","showDishDetail","HomeCtrl","OrderSuccessCtrl","step","nextStep","$timeout","$emit","constant","serverError","createPagination","entry","limit","cnf","page","total","calculateTotalPage","entries","nextPage","hasEnabled","hasPaginationEnabled","chunkEntries","Math","ceil","$stateProvider","$urlRouterProvider","state","views","@","templateUrl","resolve","appInit","header@index","nav@index","sidebar@index","content@index","marketing@index","footer@index","abstract","header@main","nav@main","sidebar@main","marketing@main","footer@main","content@main","otherwise","startLoading","promise","loadingSpinner","all","restrict","replace","directive","scope","element","bind","$apply","closeAll","imageSlider","click","index","clickImage","onClick","console","log","isCurrentIndex","prevSlide","max","nextSlide"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\n  angular.module('app', [\n      /**\n       * Angular modules\n       */\n\n      'ngAnimate',\n      'ngResource',\n\n      /**\n       * 3rd Party modules\n       */\n\n      'ngDialog',\n      'LocalStorageModule',\n      'ui.router',\n      'ui.mask',\n      'templates',\n\n      /**\n       * Reusable blocks\n       */\n\n      'app.blocks',\n\n      /**\n       * Project modules\n       */\n\n      'app.core',\n      'app.layouts',\n      'app.ctrls',\n      'app.services',\n      'app.filters',\n    ])\n    .config((\n              localStorageServiceProvider,\n              $anchorScrollProvider,\n              ngDialogProvider,\n              $httpProvider\n            ) => {\n      localStorageServiceProvider\n        .setPrefix('YOKI')\n        .setStorageType('localStorage')\n        .setNotify(true, true);\n\n      ngDialogProvider.setDefaults({showClose: false});\n      $httpProvider.interceptors.push('apiInterceptor');\n      $anchorScrollProvider.disableAutoScrolling();\n      \n      $httpProvider.defaults.useXDomain                         = true;\n      $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n      $httpProvider.defaults.headers.post['Content-Type']       = 'application/json';\n      $httpProvider.defaults.headers.post['Accept']             = 'application/json';\n    })\n\n  angular.module('app.core', []);\n  angular.module('app.blocks', []);\n  angular.module('app.layouts', []);\n  angular.module('app.ctrls', []);\n  angular.module('app.services', []);\n  angular.module('app.filters', []);\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('MainCtrl', MainCtrl)\n\n  /**\n   * @ngdoc function\n   * @description Контроллер на уровне всего приложения\n   */\n\n  MainCtrl.$inject = [\n    '$rootScope',\n    'ngDialog',\n    'storage'\n  ];\n\n  function MainCtrl(\n    $rootScope,\n    ngDialog,\n    storage\n  ) {\n\n    $rootScope.categories   = storage.getArray('categories');\n    $rootScope.showCallback = showCallback;\n\n    //////////////\n\n    function showCallback() {\n      ngDialog.open({\n        template: 'html/modals/callback.html',\n        showClose: true,\n        width: \"25%\",\n        appendClassName: 'callback-modal',\n        controller: callbackModalCtrl,\n        controllerAs: 'vm'\n      });\n    }\n\n    callbackModalCtrl.$inject = [\n      'orders'\n    ];\n\n    function callbackModalCtrl(\n      orders\n    ) {\n      let vm = this;\n\n      vm.form = {\n        client: {\n          name: '',\n          phone: 0,\n          address: 'default'\n        },\n        dishes: [],\n        status: 'FRESH'\n      };\n\n      vm.success = false;\n      vm.send    = sendForm;\n\n      //////////////////\n\n      function sendForm() {\n        orders.create(vm.form, () => {\n          vm.success = true;\n        });\n      }\n    }\n  }\n})();\n","(function() {\n  angular.module('app.layouts')\n    .controller('NavCtrl', NavCtrl)\n\n  NavCtrl.$inject = [];\n\n  function NavCtrl() {\n    let vm = this;\n  }\n})();\n","(function() {\n  angular.module('app.layouts')\n    .controller('SideBarCtrl', SideBarCtrl)\n    .controller('SideBarOrderCtrl', SideBarOrderCtrl)\n\n  SideBarCtrl.$inject = [\n    '$scope',\n    'cart'\n  ];\n\n  function SideBarCtrl(\n    $scope,\n    cart\n  ) {\n    let vm = this;\n\n    vm.dishes     = cart.list();\n    vm.priceOrder = calculateOrderPrice();\n\n    vm.incCount = (dish) => {\n      cart.inc(dish);\n    }\n\n    vm.decCount = (dish) => {\n      cart.dec(dish);\n    }\n\n    vm.removeDish = (dish) => {\n      cart.remove(dish);\n    }\n\n    vm.clearCart = () => {\n      cart.clean();\n    }\n\n    $scope.$watch(function() {\n      return vm.dishes;\n    }, function() {\n      vm.priceOrder = calculateOrderPrice();\n    }, true);\n\n    // Вычисляет цену заказа\n    function calculateOrderPrice() {\n      let result = 0;\n\n      if (vm.dishes) {\n        for (let dish of vm.dishes) {\n          result += dish.price * dish.count;\n        }\n      }\n\n      return result;\n    }\n  }\n\n  SideBarOrderCtrl.$inject = [\n    'orders',\n    '$state',\n    'cart'\n  ];\n\n  function SideBarOrderCtrl(\n    orders,\n    $state,\n    cart\n  ) {\n    let vm = this;\n\n    let dishes = [];\n\n    cart.list().forEach((dish) => {\n      dishes.push({\n        quantity: dish.count,\n        dishId: dish.id\n      });\n    });\n\n    vm.form = {\n      client: {\n        name: '',\n        phone: 0,\n        address: 'default'\n      },\n      dishes: dishes,\n      status: 'FRESH'\n    };\n\n    vm.send = () => {\n      orders.create(vm.form).$promise.finally(() => {\n        cart.clean();\n        \n        $state.go('main.order-success', {\n          client: vm.form.client\n        });\n      });\n    }\n  }\n})();\n","(function() {\n    angular.module('app.services')\n        .factory('apiInterceptor', ($rootScope, $q, ENV) => {\n            return {\n                request: (config) => {\n                    // Если запрос идет не к html/, то добавляем base url\n                    if (config.url.indexOf('html/', 0) == -1) {\n                        config.url = ENV.apiUrl + config.url\n                    }\n\n                    return config;\n                },\n                requestError: (request) => {\n                    return $q.reject(request);\n                },\n                responseError: (response) => {\n                    return $q.reject(response);\n                }\n            };\n        })\n})();","(function() {\n    angular.module('app.services')\n        .factory('$api', api)\n\n    /**\n     * @ngdoc service\n     * @name $api\n     * @module app.services\n     *\n     * @description\n     * Простая обертка под сервисом $http\n     */\n\n    function api() {\n        this.baseUrl = '';\n        this.$get = ['$http', ($http) => {\n            return {\n                get(url) {\n                    return $http.get(this.baseUrl + url)\n                },\n                post(url, data) {\n                    return $http.post(this.baseUrl + url, data)\n                },\n                delete(url) {\n                    return $http.delete(this.baseUrl + url)\n                },\n                put(url, data) {\n                    return $http.put(this.baseUrl + url, data)\n                }\n            }\n        }];\n    }\n})();","(function() {\n  angular.module('app.services')\n    .factory('cart', cart)\n\n  cart.$inject = [\n    'storage',\n    'helpers',\n    'APP_EVENTS',\n    'common'\n  ];\n\n  function cart(\n    storage,\n    helpers,\n    APP_EVENTS,\n    common\n  ) {\n\n    let products = storage.getArray('cart');\n\n    let add    = saveInStorage(emit(addCart));\n    let inc    = saveInStorage(emit(increaseCount));\n    let dec    = saveInStorage(emit(decreaseCount));\n    let remove = saveInStorage(emit(removeDish));\n    let clean  = saveInStorage(emit(clearCart));\n\n    let service = {\n      add: add,\n      inc: inc,\n      dec: dec,\n      remove: remove,\n      clean: clean,\n      amount: getAmountOfProducts,\n      list: getListOfProducts,\n    };\n\n    return service;\n\n    /**\n     * Увеличивает кол-во у переданного продукта\n     * @param {Object} product\n     */\n\n    function increaseCount(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      search.count++;\n    }\n\n    /**\n     * Уменьшает кол-во у переданного продукта\n     * @param {Object} product\n     */\n\n    function decreaseCount(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      search.count--;\n\n      if (!search.count) {\n        products.splice(products.indexOf(search), 1)\n      }\n    }\n\n    /**\n     * Удаляет продукт из корзины\n     * @param {Object} product\n     */\n\n    function removeDish(product) {\n      let search = helpers.searchByKey(products, {id: product.id});\n      products.splice(products.indexOf(search), 1);\n    }\n\n    /**\n     * Чистит корзину\n     */\n\n    function clearCart() {\n      while (products.length) {\n        products.pop();\n      }\n    }\n\n    /**\n     * Возвращает общее кол-во товаров в корзине\n     * @returns {number}\n     */\n\n    function getAmountOfProducts() {\n      let result = 0;\n\n      if (products) {\n        products.forEach((product) => {\n          result += product.count;\n        });\n      }\n\n      return result;\n    }\n\n    function getListOfProducts() {\n      return products;\n    }\n\n    /**\n     * Добавление товара в корзину\n     * @param {Object} product\n     */\n\n    function addCart(product) {\n      // Пытаемся найти переданный товар в корзине\n      let search = helpers.searchByKey(products, {id: product.id});\n\n      // Если в корзине он уже есть, то увеличиваем кол-во\n      if (search) {\n        search.count++;\n      } else {\n        product.count = 1;\n        products.push(product);\n      }\n    }\n\n    function saveInStorage(f) {\n      return function() {\n        f.apply(this, arguments);\n        storage.setObject('cart', products);\n      }\n    }\n\n    function emit(f) {\n      return function() {\n        f.apply(this, arguments);\n        common.$broadcast(APP_EVENTS.editCart);\n      }\n    }\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('categories', categories)\n\n  categories.$inject = [\n    '$resource'\n  ];\n\n  function categories($resource) {\n    return $resource('/category/:action/:id', {}, {\n      'fetchAll': {\n        method: 'GET',\n        isArray: true,\n        params: {\n          action: 'getAll'\n        }\n      },\n      'fetchDishes': {\n        method: 'GET',\n        isArray: true,\n        params: {\n          action: 'getAllDishesFromCategory'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('images', images)\n\n  images.$inject = [\n    '$resource'\n  ];\n\n  function images($resource) {\n    return $resource('/images/:action/:data', {}, {\n      'fetchAll': {\n        method: 'POST',\n        isArray: true,\n        params: {\n          action: 'getDishImages'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n  angular.module('app.services')\n    .factory('orders', orders)\n\n  orders.$inject = [\n    '$resource'\n  ];\n\n  function orders($resource) {\n    return $resource('/operator/:action/:request', {}, {\n      'create': {\n        method: 'POST',\n        params: {\n          action: 'createOrder'\n        }\n      }\n    });\n  }\n})();\n","(function() {\n    angular.module('app.services')\n        .factory('storage', storage)\n\n    /**\n     * @ngdoc service\n     * @name storage\n     * @module app.services\n     *\n     * @description\n     * Более удобная обертка над внешним сервисом localStorageService\n     */\n\n    storage.$inject = [\n        'localStorageService'\n    ];\n\n    function storage(localStorageService) {\n        return {\n            set: function(key, value) {\n                localStorageService.set(key, value);\n            },\n            get: function(key, defaultValue) {\n                return localStorageService.get(key) || defaultValue;\n            },\n            remove: function(key) {\n                localStorageService.remove(key);\n            },\n            setObject: function(key, value) {\n                localStorageService.set(key, JSON.stringify(value));\n            },\n            getObject: function(key) {\n                return JSON.parse(localStorageService.get(key)) || {};\n            },\n            getArray: function(key) {\n                return JSON.parse(localStorageService.get(key)) || [];\n            }\n        }\n    }\n})();","(function() {\n    angular.module('app.blocks')\n        .filter('postfix', PostfixFilter)\n\n    function PostfixFilter() {\n        return (value, postfix) => {\n            if (typeof postfix === 'string') {\n                return `${value} ${postfix}`.trim();\n            }\n        }\n    }\n})();\n","(function() {\n    angular.module('app.blocks')\n        .factory('helpers', helpers)\n\n    helpers.$inject = [];\n\n    function helpers() {\n\n        var service = {}\n\n        /**\n         * Возвращает новый массив разделенные на ряды, в каждом ряду будет sizeColumn колонок\n         * Helpers.shapeArrayInRows([0,1,2,3], 3) => [[0,1,2],[3]]\n         * @param {Array} array\n         * @param {Integer} sizeColumn\n         * @returns {Array}\n         */\n\n        service.shapeArrayInRows = (array, sizeColumn) => {\n            var result = [];\n\n            for (var i = 0; i < array.length; i += sizeColumn) {\n                result.push(array.slice(i, i + sizeColumn));\n            }\n\n            return result;\n        }\n\n        /**\n         * Выполняет поиск в массиве data, по переданному объекту search.\n         * Пример объекта search = {key: value}\n         * @param {Array} data\n         * @param {Object} search\n         * @returns {Object|Undefined}\n         */\n\n        service.searchByKey = (data, search) => {\n            let keys = Object.keys(search);\n\n            for (let row of data) {\n                if (row[keys[0]] == search[keys[0]]) {\n                    return row;\n                }\n            }\n        }\n\n        return service;\n    }\n})();","(function() {\n  angular.module('app.ctrls')\n    .controller('CartCtrl', CartCtrl)\n\n  CartCtrl.$inject = [\n    '$controller',\n    '$scope',\n  ];\n\n  function CartCtrl(\n    $controller,\n    $scope\n  ) {\n    let vm = this;\n\n    // Добавляем в текущий vm все что есть в SideBarCtrl.vm\n    angular.extend(vm, $controller('SideBarCtrl', {$scope: $scope}));\n    vm.orderInfo = calculateOrderInfo();\n\n    $scope.$watch(function() {\n      return vm.dishes;\n    }, function() {\n      vm.orderInfo = calculateOrderInfo();\n    }, true);\n\n    function calculateOrderInfo() {\n      let result = {\n        price: 0,\n        count: 0\n      };\n\n      if (vm.dishes) {\n        for (let dish of vm.dishes) {\n          result.price += dish.price * dish.count;\n          result.count += dish.count;\n        }\n      }\n\n      return result;\n    }\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('CategoryCtrl', CategoryCtrl)\n\n  CategoryCtrl.$inject = [\n    'spinner',\n    'pagination',\n    'categories',\n    'images',\n    'ngDialog',\n    'helpers',\n    '$stateParams'\n  ];\n\n  function CategoryCtrl(\n    spinner,\n    pagination,\n    categories,\n    images,\n    ngDialog,\n    helpers,\n    $stateParams\n  ) {\n    let vm = this;\n\n    vm.pagination;\n    vm.dishes = [];\n\n    activate();\n\n    function activate() {\n      let promises = [getDishes()];\n      spinner.start(promises);\n    }\n\n    function getDishes() {\n      return categories.fetchDishes({\n        id: $stateParams.id\n      }).$promise.then((dishes) => {\n        return dishes;\n      }).then(dishes => {\n        return getDishesImages(dishes).then(() => {\n          vm.pagination = pagination.create(dishes);\n          vm.getMoreDishes();\n        })\n      });\n    }\n\n    function getDishesImages(dishes) {\n      let filter = dishes.filter(dish => {\n        if (dish.images.length) {\n          return true;\n        }\n      });\n\n      let before = [];\n\n      filter.forEach(dish => {\n        let obj = {\n          dishId: dish.id,\n          links: []\n        };\n\n        dish.images.forEach(image => {\n          obj.links.push(image.link);\n        });\n\n        before.push(obj);\n      });\n\n      return images.fetchAll(before).$promise\n        .then(imagesLink => {\n          imagesLink.forEach(images => {\n            let search = helpers.searchByKey(dishes, {\n              id: images.dishId\n            });\n\n            if (search) {\n              search.images = images.images;\n            }\n          });\n        });\n    }\n\n    vm.getMoreDishes = () => {\n      let chunkDishes = vm.pagination.next();\n\n      helpers.shapeArrayInRows(chunkDishes, 3).forEach((row) => {\n        vm.dishes.push(row);\n      });\n    }\n\n    vm.showDishDetail = (dish) => {\n      ngDialog.open({template: 'html/modals/dish.html', data: dish});\n    }\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('HomeCtrl', HomeCtrl)\n\n  HomeCtrl.$inject = [\n    'spinner',\n    'pagination',\n    'categories',\n    'images',\n    'ngDialog',\n    'helpers'\n  ];\n\n  function HomeCtrl(\n    spinner,\n    pagination,\n    categories,\n    images,\n    ngDialog,\n    helpers\n  ) {\n    let vm = this;\n    vm.pagination;\n    vm.dishes = [];\n\n    activate();\n\n    function activate() {\n      let promises = [getDishes()];\n      spinner.start(promises);\n    }\n\n    function getDishes() {\n      return categories.fetchDishes({\n        id: 1\n      }).$promise.then((dishes) => {\n        return dishes;\n      }).then(dishes => {\n        return getDishesImages(dishes).then(() => {\n          vm.pagination = pagination.create(dishes);\n          vm.getMoreDishes();\n        })\n      });\n    }\n\n    function getDishesImages(dishes) {\n      let filter = dishes.filter(dish => {\n        if (dish.images.length) {\n          return true;\n        }\n      });\n\n      let before = [];\n\n      filter.forEach(dish => {\n        let obj = {\n          dishId: dish.id,\n          links: []\n        };\n\n        dish.images.forEach(image => {\n          obj.links.push(image.link);\n        });\n\n        before.push(obj);\n      });\n\n      return images.fetchAll(before).$promise\n        .then(imagesLink => {\n          imagesLink.forEach(images => {\n            let search = helpers.searchByKey(dishes, {\n              id: images.dishId\n            });\n\n            if (search) {\n              search.images = images.images;\n            }\n          });\n        });\n    }\n\n    vm.getMoreDishes = () => {\n      let chunkDishes = vm.pagination.next();\n\n      helpers.shapeArrayInRows(chunkDishes, 3).forEach((row) => {\n        vm.dishes.push(row);\n      });\n    }\n\n    vm.showDishDetail = (dish) => {\n      ngDialog.open({template: 'html/modals/dish.html', data: dish});\n    }\n  }\n})();\n","(function() {\n  angular.module('app.ctrls')\n    .controller('OrderSuccessCtrl', OrderSuccessCtrl)\n\n  OrderSuccessCtrl.$inject = [\n    '$stateParams'\n  ];\n\n  function OrderSuccessCtrl(\n    $stateParams\n  ) {\n    let vm = this;\n\n    vm.step   = 1;\n    vm.client = $stateParams.client;\n\n    vm.nextStep = () => {\n      vm.step++;\n    }\n  }\n})();","(function() {\n    angular.module('app.core')\n        .factory('common', common)\n\n    common.$inject = [\n        '$q',\n        '$rootScope',\n        '$timeout',\n    ];\n\n    function common(\n        $q,\n        $rootScope,\n        $timeout\n    ) {\n        let service = {\n            $broadcast: $broadcast,\n            $emit: $emit,\n            $q: $q,\n            $timeout: $timeout\n        };\n\n        return service;\n\n        function $broadcast() {\n            return $rootScope.$broadcast.apply($rootScope, arguments);\n        }\n\n        function $emit() {\n            return $rootScope.$emit.apply($rootScope, arguments);\n        }\n    }\n})();","(function() {\n  angular.module('app.core')\n    .constant('ENV', {\n      \"apiUrl\": 'http://46.101.230.74:8080/yoki'\n    })\n    .constant('APP_EVENTS', {\n      editCart: 'edit-to-cart',\n      serverError: 'server-error',\n    })\n})();","(function() {\n    angular.module('app.core')\n        .factory('pagination', pagination)\n\n    pagination.$inject = [];\n\n    function pagination() {\n        let cnf     = {};\n        let entries = [];\n        let service = {\n            create: createPagination\n        };\n\n        return service;\n\n        function createPagination(entry, limit = 6) {\n            cnf.page  = 0;\n            cnf.total = calculateTotalPage(entry, limit);\n            cnf.limit = limit;\n\n            entries = entry;\n\n            // Pagination public method\n            return {\n                next: nextPage,\n                hasEnabled: hasPaginationEnabled\n            }\n        }\n\n        function nextPage() {\n            let chunkEntries = [];\n\n            if (cnf.page === 0) {\n                chunkEntries = entries.slice(cnf.page, cnf.limit);\n            } else {\n                chunkEntries = entries.slice(cnf.page * cnf.limit, (cnf.page * cnf.limit) + cnf.limit);\n            }\n\n            cnf.page++;\n\n            return chunkEntries;\n        }\n\n        function hasPaginationEnabled() {\n            return cnf.page < cnf.total\n        }\n\n        function calculateTotalPage(entries, limit) {\n            return Math.ceil(entries.length / limit);\n        }\n    }\n})();","(function() {\n  angular.module('app.core')\n    .config(($stateProvider, $urlRouterProvider) => {\n      $stateProvider\n        .state('index', {\n          url: '/',\n          views: {\n            '@': {\n              templateUrl: 'html/layouts/main.html',\n              resolve: {\n                appInit: function(categories, storage) {\n                  // Подгружаем категории\n                  return categories.fetchAll().$promise.then((categories) => {\n                    storage.setObject('categories', categories);\n                  });\n                }\n              }\n            },\n            'header@index': {\n              templateUrl: 'html/layouts/header-index.tpl.html',\n            },\n            'nav@index': {\n              templateUrl: 'html/layouts/nav.tpl.html',\n              controller: 'NavCtrl',\n              controllerAs: 'nav'\n            },\n            'sidebar@index': {\n              templateUrl: 'html/layouts/sidebar.tpl.html',\n              controller: 'SideBarCtrl',\n              controllerAs: 'sbar',\n            },\n            'content@index': {\n              templateUrl: 'html/components/home/home.tpl.html',\n              controller: 'HomeCtrl',\n              controllerAs: 'home'\n            },\n            'marketing@index': {\n              templateUrl: 'html/layouts/marketing.tpl.html',\n            },\n            'footer@index': {\n              templateUrl: 'html/layouts/footer.tpl.html',\n            },\n          },\n        })\n        .state('main', {\n          abstract: true,\n          url: '/',\n          views: {\n            '@': {\n              templateUrl: 'html/layouts/main.html',\n              resolve: {\n                appInit: function(categories, storage) {\n                  // Если нет категорий подгружаем\n                  if (!storage.getArray('categories').length) {\n                    return categories.fetchAll().$promise.then((categories) => {\n                      storage.setObject('categories', categories);\n                    });\n                  }\n                }\n              }\n            },\n            'header@main': {\n              templateUrl: 'html/layouts/header.tpl.html',\n            },\n            'nav@main': {\n              templateUrl: 'html/layouts/nav.tpl.html',\n              controller: 'NavCtrl',\n              controllerAs: 'nav'\n            },\n            'sidebar@main': {\n              templateUrl: 'html/layouts/sidebar.tpl.html',\n              controller: 'SideBarCtrl',\n              controllerAs: 'sbar',\n            },\n            'marketing@main': {\n              templateUrl: 'html/layouts/marketing.tpl.html',\n            },\n            'footer@main': {\n              templateUrl: 'html/layouts/footer.tpl.html',\n            },\n          },\n        })\n        .state('main.category', {\n          url: 'category/:id',\n          views: {\n            'content@main': {\n              controller: 'CategoryCtrl',\n              templateUrl: 'html/components/category/category.tpl.html',\n              controllerAs: 'cat'\n            }\n          }\n        })\n        .state('main.cart', {\n          url: 'cart',\n          views: {\n            'content@main': {\n              controller: 'CartCtrl',\n              templateUrl: 'html/components/cart/cart.tpl.html',\n              controllerAs: 'cart'\n            },\n            'sidebar@main': {\n              templateUrl: 'html/layouts/sidebar-order.tpl.html',\n              controller: 'SideBarOrderCtrl',\n              controllerAs: 'sbcar',\n            },\n          }\n        })\n        .state('main.order-success', {\n          url: 'order/success',\n          views: {\n            'content@main': {\n              controller: 'OrderSuccessCtrl',\n              templateUrl: 'html/components/order/order.tpl.html',\n              controllerAs: 'order'\n            }\n          },\n          params: {\n            client: null\n          }\n        })\n\n      $urlRouterProvider.otherwise('/');\n    })\n})();\n","(function() {\n  angular.module('app.core')\n    .directive('loadingSpinner', loadingSpinner)\n    .factory('spinner', spinner)\n\n  spinner.$inject = [\n    'common',\n    '$rootScope'\n  ];\n\n  function spinner(common, $rootScope) {\n    let service = {\n      start: startLoading\n    };\n\n    return service;\n\n    /**\n     * Запускает spinner во время выполнения промисов\n     * @param {Array} promise\n     */\n\n    function startLoading(promise) {\n      $rootScope.loadingSpinner = true;\n\n      common.$q.all(promise).then(() => {\n        common.$timeout(() => {\n          $rootScope.loadingSpinner = false;\n        }, 400);\n      });\n    }\n  }\n\n  function loadingSpinner() {\n    return {\n      restrict: 'E',\n      replace: true,\n      templateUrl: 'html/layouts/core/spinner.html'\n    }\n  }\n})();","(function() {\n  angular.module('app.blocks')\n    .directive('addCart', addCart)\n\n  addCart.$inject = [\n    'cart',\n    'ngDialog'\n  ];\n\n  function addCart(cart, ngDialog) {\n    return {\n      restrict: 'A',\n      scope: {\n        dish: '=dish'\n      },\n      link: (scope, element) => {\n        element.bind('click', () => {\n          scope.$apply(() => {\n            ngDialog.closeAll();\n            cart.add(scope.dish);\n          });\n        });\n      }\n    }\n  }\n})();","(function() {\n  angular.module('app.blocks')\n    .directive('imageSlider', imageSlider)\n\n  function imageSlider() {\n    return {\n      restrict: 'E',\n      replace: true,\n      scope: {\n        images: '=images',\n        click: '&'\n      },\n      templateUrl: 'html/blocks/directive/image-slider/slider.html',\n      link: (scope) => {\n        scope.index = 0;\n        \n        scope.clickImage = () => {\n          if (scope.onClick) {\n            console.log(scope.onClick);\n            scope.onClick()\n          }\n        }\n        \n        scope.isCurrentIndex = (index) => {\n          return scope.index === index;\n        }\n\n        scope.prevSlide = () => {\n          let max  = scope.images.length - 1;\n          let next = scope.index - 1;\n\n          scope.index = (next === -1) ? max : next;\n        }\n\n        scope.nextSlide = () => {\n          let max  = scope.images.length - 1;\n          let next = scope.index + 1;\n\n          scope.index = (next > max) ? 0 : next;\n        }\n      }\n    }\n  }\n})();"],"sourceRoot":"/source/"}